// Code generated by MockGen. DO NOT EDIT.
// Source: ./services.go

// Package indexhandler is a generated GoMock package.
package indexhandler

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIndexService is a mock of IndexService interface.
type MockIndexService struct {
	ctrl     *gomock.Controller
	recorder *MockIndexServiceMockRecorder
}

// MockIndexServiceMockRecorder is the mock recorder for MockIndexService.
type MockIndexServiceMockRecorder struct {
	mock *MockIndexService
}

// NewMockIndexService creates a new mock instance.
func NewMockIndexService(ctrl *gomock.Controller) *MockIndexService {
	mock := &MockIndexService{ctrl: ctrl}
	mock.recorder = &MockIndexServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndexService) EXPECT() *MockIndexServiceMockRecorder {
	return m.recorder
}

// GetIndex mocks base method.
func (m *MockIndexService) GetIndex(ctx context.Context, id int64) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIndex", ctx, id)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIndex indicates an expected call of GetIndex.
func (mr *MockIndexServiceMockRecorder) GetIndex(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIndex", reflect.TypeOf((*MockIndexService)(nil).GetIndex), ctx, id)
}
